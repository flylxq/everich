{"version":3,"sources":["Client.jsx"],"names":[],"mappings":"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","file":"Client.js","sourcesContent":["/**\r\n *\r\n */\r\n\r\nimport * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport DAO from '../controller/DAO'\r\nimport { ManageTable } from '../components/Table'\r\nimport { Button, Input, Modal } from 'react-bootstrap'\r\nimport NotificationSystem from 'react-notification-system'\r\n\r\nrequire('../../stylesheets/client.scss')\r\n\r\n/**\r\n * key: key's name in source table\r\n * label: key's show text\r\n * require: whether the key is required, default is false\r\n * type: key's type for input, default is text\r\n * @type {*[]}\r\n */\r\nvar CLIENT_SCHEMA = [{\r\n    key: 'code',\r\n    label: '编号',\r\n    require: true\r\n}, {\r\n    key: 'name',\r\n    label: '名称',\r\n    require: true\r\n}, {\r\n    key: 'address',\r\n    label: '地址',\r\n    require: false\r\n}, {\r\n    key: 'contact',\r\n    label: '联系信息',\r\n    type: 'textarea',\r\n    require: false\r\n}]\r\nvar ERROR = {\r\n    text: '错误',\r\n    unknown: '未知错误',\r\n    transport: '传输错误'\r\n}\r\n\r\nlet Client = React.createClass({\r\n    getDefaultProps: function() {\r\n        return {\r\n            schema: CLIENT_SCHEMA,\r\n            tableAdmin: true,\r\n            tableIndex: true,\r\n            dao: new DAO('/clientServer')\r\n        }\r\n    },\r\n    getInitialState: function() {\r\n        this._initAjax()\r\n        return {\r\n            client: this._getEmptyClient(),\r\n            status: '',\r\n            showModal: false,\r\n            data: [{id: 1, code: '001', name: 'test1', address: 'address1', contact: 'contact1'},{id: 2, code: '002', name: 'test2', address: 'address2', contact: 'contact2'},]\r\n        }\r\n    },\r\n    _notificationSystem: null,\r\n    _initAjax: function() {\r\n        let self = this\r\n        $.ajaxSetup({\r\n            method: 'json',\r\n            dataFilter: function(rsp, settings) {\r\n                if(rsp.success) {\r\n                    return rsp.data;\r\n                } else {\r\n                    self._addNotification({\r\n                        title: ERROR.text,\r\n                        message: rsp.message,\r\n                        level: 'error'\r\n                    })\r\n                }\r\n            },\r\n            error: function(jqXHR){\r\n                console.log(jqXHR);\r\n                self._addNotification({\r\n                    title: ERROR.text,\r\n                    message: ERROR.transport,\r\n                    level: 'error'\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _addNotification: function(notification) {\r\n        this._notificationSystem.addNotification(notification)\r\n    },\r\n    _getEmptyClient: function() {\r\n        let client = {}\r\n        CLIENT_SCHEMA.forEach(key => client[key.key] = '')\r\n        return client\r\n    },\r\n    _editClient: function(client) {\r\n        this.setState({client: client, status: 'edit', showModal: true})\r\n    },\r\n    _deleteClient: function(client) {\r\n        let { dao } = this.props\r\n        dao.delete(client.id)\r\n    },\r\n    _addClient: function() {\r\n        let client = this._getEmptyClient()\r\n        this.setState({client: client, status: 'add', showModal: true})\r\n    },\r\n    _confirm: function() {\r\n        let { status, client } = this.state\r\n        let { dao } = this.props\r\n        if(status === 'add') {\r\n            dao.create(client)\r\n        } else if(status === 'edit') {\r\n            dao.update(client)\r\n        }\r\n        this.setState({showModal: false})\r\n    },\r\n    _cancel: function() {\r\n        this.setState({showModal: false})\r\n    },\r\n    _validate: function(header) {\r\n        if(header.require && this.state.client[header.key].length === 0) {\r\n            return 'error'\r\n        }\r\n        return 'success'\r\n    },\r\n    _handleChange: function(header) {\r\n        let { client } = this.state\r\n        let key = header.key\r\n        client[key] = this.refs[key].getValue()\r\n        this.setState({client: client})\r\n    },\r\n    componentDidMount: function() {\r\n        this._notificationSystem = this.refs.notificationSystem\r\n    },\r\n    render: function() {\r\n        let { schema, tableAdmin, tableIndex } = this.props\r\n        let { client, data, status, showModal } = this.state\r\n\r\n        let inputNodes = schema.map((header, index) => (\r\n            <Input key = {index}\r\n                   type = {header.type || 'text'}\r\n                   value = {client[header.key]}\r\n                   placeholder = {header.label}\r\n                   label = {(header.require ? '*' : '') + header.label + ':'}\r\n                   labelClassName = 'col-md-2'\r\n                   ref = {header.key}\r\n                   wrapperClassName = 'col-md-10'\r\n                   bsStyle = {this._validate(header)}\r\n                   onChange = {() => this._handleChange(header)}></Input>\r\n        ))\r\n\r\n        return (\r\n            <div className = 'container'>\r\n                <div className = 'page-header row'>\r\n                    <div className = 'col-lg-2'>\r\n                        <button className = 'btn btn-block btn-success' onClick = {this._addClient}>\r\n                            <span className = 'glyphicon glyphicon-plus'></span>\r\n                            添加客户\r\n                        </button>\r\n                    </div>\r\n                    <div className = 'col-lg-10 page-title'>\r\n                        Client Management\r\n                    </div>\r\n                </div>\r\n                <ManageTable schema = {schema}\r\n                       data = {data}\r\n                       editRow = {this._editClient}\r\n                       deleteRow = {this._deleteClient}\r\n                       tableAdmin = {tableAdmin}\r\n                       tableIndex = {tableIndex}></ManageTable>\r\n                <Modal show = {showModal}\r\n                       onHide = {this._cancel}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{status === 'add' ? '添加客户' : '编辑客户'}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className = 'form-horizontal'>\r\n                            {inputNodes}\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button bsSize = 'medium' onClick = {this._cancel}>取消</Button>\r\n                        <Button bsSize = 'medium' bsStyle = 'primary' onClick = {this._confirm}>确认</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <NotificationSystem ref = 'notificationSystem'></NotificationSystem>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nReactDOM.render(\r\n    <Client></Client>,\r\n    $('#body').get(0)\r\n)\r\n"]}