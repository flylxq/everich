{"version":3,"sources":["Dialog.jsx"],"names":[],"mappings":";;;;;;;;;IAIY,KAAK;;;;;;;;;;AAGV,IAAI,MAAM,WAAN,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAClC,mBAAe,EAAE,2BAAU;4BACiB,IAAI,CAAC,KAAK,CAAC,MAAM;YAAnD,IAAI,iBAAJ,IAAI;YAAE,OAAO,iBAAP,OAAO;YAAE,IAAI,iBAAJ,IAAI;YAAE,QAAQ,iBAAR,QAAQ;;AACnC,eAAO;AACH,gBAAI,EAAE,IAAI,IAAI,KAAK;AACnB,mBAAO,EAAE,OAAO,IAAI,EAAE;AACtB,gBAAI,EAAE,IAAI,IAAI,OAAO;AACrB,oBAAQ,EAAE,QAAQ,IAAI,IAAI;SAC7B,CAAA;KACJ;AACD,SAAK,EAAE,eAAS,OAAO,EAAE,QAAQ,EAAE;AAC/B,YAAI,CAAC,QAAQ,CAAC;AACV,gBAAI,EAAE,IAAI;AACV,mBAAO,EAAE,OAAO;AAChB,gBAAI,EAAE,OAAO;AACb,oBAAQ,EAAE,QAAQ;SACrB,CAAC,CAAA;KACL;AACD,WAAO,EAAE,iBAAS,OAAO,EAAE,QAAQ,EAAE;AACjC,YAAI,CAAC,QAAQ,CAAC;AACV,gBAAI,EAAE,IAAI;AACV,mBAAO,EAAE,OAAO;AAChB,gBAAI,EAAE,SAAS;AACf,oBAAQ,EAAE,QAAQ;SACrB,CAAC,CAAA;KACL;AACD,YAAQ,EAAE,oBAAW;AACjB,YAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;AACrB,YAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAA;KAC/B;AACD,WAAO,EAAE,mBAAW;AAChB,YAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAA;KAC/B;AACD,qBAAiB,EAAE,6BAAW;AAC1B,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,SAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,UAAS,KAAK,EAAC;AACpC,gBAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,EAAE;AACxC,oBAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;SACJ,CAAC,CAAA;KACL;AACD,UAAM,EAAE,kBAAW;qBACe,IAAI,CAAC,KAAK;YAAlC,IAAI,UAAJ,IAAI;YAAE,IAAI,UAAJ,IAAI;YAAE,OAAO,UAAP,OAAO;;AACzB,YAAI,UAAU,GAAG,IAAI,KAAK,SAAS,GAAI;;cAAQ,OAAO,EAAI,IAAI,CAAC,OAAO,AAAC;;SAAY,GAAI,IAAI,CAAA;AAC3F,eACI;;cAAO,IAAI,EAAI,IAAI,AAAC;AACb,wBAAQ,EAAG,QAAQ;AACnB,4BAAY,MAAA;AACZ,wBAAQ,EAAI,KAAK,AAAC;YACrB;sCAAO,IAAI;;gBAAE,OAAO;aAAc;YAClC;sCAAO,MAAM;;gBACT;;sBAAQ,OAAO,EAAG,SAAS,EAAC,OAAO,EAAI,IAAI,CAAC,QAAQ,AAAC;;iBAAY;gBAChE,UAAU;aACA;SACX,CACX;KACJ;CACJ,CAAC,CAAA","file":"Dialog.js","sourcesContent":["/**\r\n *\r\n */\r\n\r\nimport * as React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nexport let Dialog = React.createClass({\r\n    getInitialState: function(){\r\n        let { show, message, type, callback } = this.props.dialog\r\n        return {\r\n            show: show || false,\r\n            message: message || '',\r\n            type: type || 'alert',\r\n            callback: callback || null\r\n        }\r\n    },\r\n    alert: function(message, callback) {\r\n        this.setState({\r\n            show: true,\r\n            message: message,\r\n            type: 'alert',\r\n            callback: callback\r\n        })\r\n    },\r\n    confirm: function(message, callback) {\r\n        this.setState({\r\n            show: true,\r\n            message: message,\r\n            type: 'confirm',\r\n            callback: callback\r\n        })\r\n    },\r\n    _confirm: function() {\r\n        this.state.callback()\r\n        this.setState({show: false})\r\n    },\r\n    _cancel: function() {\r\n        this.setState({show: false})\r\n    },\r\n    componentDidMount: function() {\r\n        var self = this;\r\n        $(window).on('keypress', function(event){\r\n            if(self.state.show && event.keyCode === 13) {\r\n                self._confirm();\r\n            }\r\n        })\r\n    },\r\n    render: function() {\r\n        let { show, type, message } = this.state\r\n        let cancelNode = type === 'confirm' ? (<Button onClick = {this._cancel}>取消</Button>) : null\r\n        return (\r\n            <Modal show = {show}\r\n                   backdrop = 'static'\r\n                   enforceFocus\r\n                   keyboard = {false}>\r\n                <Modal.Body>{message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle = 'primary' onClick = {this._confirm}>确认</Button>\r\n                    {cancelNode}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n})\r\n"]}