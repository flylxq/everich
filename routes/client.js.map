{"version":3,"sources":["client.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;;;AAK9B,IAAI,GAAG,GAAG,kBAAQ,SAAS,CAAC,CAAA;;AAE5B,IAAI,YAAY,GAAG,SAAf,YAAY,CAAY,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;eACb,GAAG,CAAC,MAAM,KAAK,MAAM,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK;;QAAjE,MAAM,QAAN,MAAM;QAAE,OAAO,QAAP,OAAO;;AACrB,WAAO,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAA;;AAE9C,YAAO,MAAM;AACT,aAAK,QAAQ;AACT,+BAAS,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,CAAA;AACtD,kBAAM;AAAA,AACV,aAAK,QAAQ;AACT,+BAAS,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,aAAa,CAAC,CAAA;AACzD,kBAAM;AAAA,AACV,aAAK,MAAM;AACP,+BAAS,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAA;AAC3C,kBAAM;AAAA,AACV,aAAK,QAAQ;AACT,+BAAS,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,cAAc,CAAC,CAAA;AAC7D,kBAAM;AAAA,AACV,gBAAQ;KACX;CACJ,CAAA;;AAED,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACrC,OAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;CAC7C,CAAC,CACD,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC;;;AAAC,AAG9B,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"client.js","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\n\r\nimport DAO from '../public/javascripts/mysql/DAO'\r\nimport Response from '../public/javascripts/common/Response'\r\n/* GET client page. */\r\nlet dao = new DAO('clients')\r\n\r\nlet clientServer = function(req, res, next) {\r\n    let { method, options } = (req.method === 'POST' ? req.body : req.query)\r\n    options = options ? JSON.parse(options) : null\r\n\r\n    switch(method) {\r\n        case 'create':\r\n            Response.factory(res, dao.create(options), 'insertId')\r\n            break;\r\n        case 'update':\r\n            Response.factory(res, dao.update(options), 'changedRows')\r\n            break;\r\n        case 'read':\r\n            Response.factory(res, dao.read(options.id))\r\n            break;\r\n        case 'delete':\r\n            Response.factory(res, dao.delete(options.id), 'affectedRows')\r\n            break;\r\n        default:\r\n    }\r\n}\r\n\r\nrouter.get('/', function(req, res, next) {\r\n    res.render('client', { title: 'Client' });\r\n})\r\n.all('/server', clientServer);\r\n\r\n//router.post('/server', clientServer)\r\nmodule.exports = router;\r\n"]}